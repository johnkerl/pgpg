// ================================================================
// LEXICAL ELEMENTS
// ================================================================

_decdig : '0'-'9' ;
!whitespace : ' ' | '\t' | '\n' | '\r' ;
!comment : '#'  {.} '\n' ;

// ----------------------------------------------------------------
// INT/FLOAT/BOOLEAN LITERALS
// ----------------------------------------------------------------

// Notes on int literals:
// * Leading minus sign is handled via the unary-minus operator, not here.
int_literal
  : _decdig { _decdig }
;

// ================================================================
// SYNTAX ELEMENTS
// ================================================================

// Import the AST/ASTNode types and functions
<< import "github.com/johnkerl/miller/internal/pkg/dsl" >>

// ================================================================
// TOP-LEVEL PRODUCTION RULE FOR THE MILLER DSL

// ----------------------------------------------------------------
Root
  : Rvalue
   << dsl.NewAST($0) >>
;

Rvalue : PrecedenceChainStart ;

PrecedenceChainStart : AddSubTerm ;

AddSubTerm
  : AddSubTerm "+"  MulDivTerm << dsl.NewASTNodeBinary($1, $0, $2, dsl.NodeTypeOperator) >>
  | AddSubTerm "-"  MulDivTerm << dsl.NewASTNodeBinary($1, $0, $2, dsl.NodeTypeOperator) >>
  | MulDivTerm
;

MulDivTerm
  : MulDivTerm "*"   RHSValue << dsl.NewASTNodeBinary($1, $0, $2, dsl.NodeTypeOperator) >>
  | MulDivTerm "/"   RHSValue << dsl.NewASTNodeBinary($1, $0, $2, dsl.NodeTypeOperator) >>
  | MulDivTerm "%"   RHSValue << dsl.NewASTNodeBinary($1, $0, $2, dsl.NodeTypeOperator) >>
  | RHSValue
;

// ================================================================
// END RVALUE OPERATOR-PRECEDENCE CHAIN
// ================================================================

// ----------------------------------------------------------------
RHSValue
  : int_literal
    << dsl.NewASTNode($0, dsl.NodeTypeIntLiteral) >>
;
